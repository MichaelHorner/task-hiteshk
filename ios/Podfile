# require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
# require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")

# require 'json'
# podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}

# ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'
# ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']

# platform :ios, podfile_properties['ios.deploymentTarget'] || '13.4'
# install! 'cocoapods',
#   :deterministic_uuids => false

# prepare_react_native_project!


# def node_require(script)
#   # Resolve script with node to allow for hoisting
#   require Pod::Executable.execute_command('node', ['-p',
#     "require.resolve(
#       '#{script}',
#       {paths: [process.argv[1]]},
#     )", __dir__]).strip
# end

# node_require('react-native/scripts/react_native_pods.rb')
# node_require('react-native-permissions/scripts/setup.rb')

# platform :ios, '13.4'
# prepare_react_native_project!


# $static_library = [
#     'React',
#     'react-native-skia/Api',
#     'react-native-skia/Jsi',
#     'react-native-skia/RNSkia',
#     'react-native-skia/SkiaHeaders',
#     'react-native-skia/Utils',
#     'react-native-skia',
#  ]

# pre_install do |installer|
#  Pod::Installer::Xcode::TargetValidator.send(:define_method, :verify_no_static_framework_transitive_dependencies) {}

#  installer.pod_targets.each do |pod|
#    ## Skia pod correction
#    if $static_library.include?(pod.name)
#      puts "Overriding the build_type to static_library from static_framework for #{pod.name}"
#      def pod.build_type;
#        Pod::BuildType.static_library
#      end
#    end

#    ## Firebase
#    bt = pod.send(:build_type)
#    puts "#{pod.name} (#{bt})"
#    puts "  linkage: #{bt.send(:linkage)} packaging: #{bt.send(:packaging)}"
#  end
# end

# require Pod::Executable.execute_command('node', ['-p',
#   'require.resolve(
#     "react-native/scripts/react_native_pods.rb",
#     {paths: [process.argv[1]]},
#   )', __dir__]).strip

  def node_require(script)
    # Resolve script with node to allow for hoisting
    require Pod::Executable.execute_command('node', ['-p',
      "require.resolve(
        '#{script}',
        {paths: [process.argv[1]]},
      )", __dir__]).strip
  end

  node_require('react-native/scripts/react_native_pods.rb')
  node_require('react-native-permissions/scripts/setup.rb')

platform :ios, '13.4'
prepare_react_native_project!


flipper_config = ENV['NO_FLIPPER'] == "1" ? FlipperConfiguration.disabled : FlipperConfiguration.enabled

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
 Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
 use_frameworks! :linkage => linkage.to_sym
end

target 'Pixllove' do
  # use_expo_modules!
  # pod 'react-native-text-input-mask', :path => '../node_modules/react-native-text-input-mask', :modular_headers => true
  # use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym if podfile_properties['ios.useFrameworks']
  # use_frameworks! :linkage => ENV['USE_FRAMEWORKS'].to_sym if ENV['USE_FRAMEWORKS']
  config = use_native_modules!
  use_frameworks! :linkage => :static
  flags = get_default_flags()
  pod 'React-RCTText', :path => '../node_modules/react-native/Libraries/Text', :modular_headers => true

   use_react_native!(
    :path => config[:reactNativePath],
    :app_path => "#{Pod::Config.instance.installation_root}/..",
    :hermes_enabled => false,
    :fabric_enabled => flags[:fabric_enabled],
    # :hermes_enabled => podfile_properties['expo.jsEngine'] == nil || podfile_properties['expo.jsEngine'] == 'hermes',
    # An absolute path to your application root.
    # :privacy_file_aggregation_enabled => podfile_properties['apple.privacyManifestAggregationEnabled'] != 'false',
  )

  # target 'PixlloveTests' do
  #   inherit! :complete
  #   # Pods for testing
  # end

  post_install do |installer|
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['ENABLE_BITCODE'] = 'NO'
       end
   end

    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      # :ccache_enabled => podfile_properties['apple.ccacheEnabled'] == 'true',
    )

    # This is necessary for Xcode 14, because it signs resource bundles by default
    # when building for devices.
    #   installer.target_installation_results.pod_target_installation_results
    #     .each do |pod_name, target_installation_result|
    #     target_installation_result.resource_bundle_targets.each do |resource_bundle_target|
    #       resource_bundle_target.build_configurations.each do |config|
    #         config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
    #       end
    #     end
    #   end
    # end

    # post_integrate do |installer|
    #   begin
    #     expo_patch_react_imports!(installer)
    #   rescue => e
    #     Pod::UI.warn e
    #   end
  end
end
